#!/bin/bash

PROG_TEMPLATE="/opt/packet_forwarder/bin/lora_pkt_fwd_%s"
PROG_M="/opt/miner/bin/miner"
PROG_CI="/opt/packet_forwarder/bin/chip_id"
CONF_TEMPLATE="/opt/packet_forwarder/etc/global_conf.json.%s.%s"
LOG="/var/log/packet_forwarder.log"
LIB_DIR="/opt/packet_forwarder/lib"
REG_TIMEOUT=600
DEF_REG="US915"


test -n "${OS_VERSION}" || source /etc/init.d/base


find_reg() {
    region=$(${PROG_M} info region 2>/dev/null)
    test $? == 0 || region=""

    # Can't detect region when provisioning, so we use a default instead of bailing out
    test -f /var/log/provision.log && test -z "${region}" && region=${DEF_REG}

    echo ${region}
}

find_sx() {
    cd $(dirname ${PROG_CI})
    if ${PROG_CI} | grep -q "concentrator EUI:"; then
        echo "sx1302"
    else
        echo "sx1301"
    fi
}

start() {
    msg_begin "Starting packet-forwarder"
    
    if ! [[ -e /dev/spidev0.0 ]]; then
        msg_fail "no SPI device"
        return
    fi
    
    count=0
    while true; do
        reg=$(find_reg)
        if [[ -z "${reg}" ]]; then
            count=$((count + 1))
            if [[ ${count} -gt ${REG_TIMEOUT} ]]; then
                msg_fail "no regulatory information"
                panic_action packetforwarder "no regulatory information"
                return 1
            fi
            sleep 1
        else
            break
        fi
    done

    sx=$(find_sx)
    prog=$(printf ${PROG_TEMPLATE} ${sx})

    # Prepare conf
    conf=$(printf ${CONF_TEMPLATE} ${sx} ${reg})
    ln -sf ${conf} /var/run/global_conf.json

    # Must be run from the bin directory
    cd $(dirname ${prog})
    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LIB_DIR}
    
    # stdbuf here forces line buffering, allowing real-time log
    stdbuf -oL -eL ${prog} &> ${LOG} &

    msg_done ${sx}/${reg}
}

stop() {
    msg_begin "Stopping packet-forwarder"
    
    sx=$(find_sx)
    prog=$(printf ${PROG_TEMPLATE} ${sx})
    base_prog=$(basename ${prog})
    if killall -q ${base_prog}; then
        # Allow 2 seconds for a gracefulish shutdown
        sleep 2
        msg_done
    else
        msg_fail
    fi
    
    # Kill any remainings with SIGKILL
    ps | grep -E '/opt/packet_forwarder' | grep -v $$ | grep -v grep | tr -s ' ' | sed -e 's/^\s//' | cut -d ' ' -f 1 | xargs -r kill -9
}

case "$1" in
    start)
        start
        ;;

    stop)
        stop
        ;;

    restart)
        stop
        start
        ;;

    *)
        echo "Usage: $0 {start|stop|restart}"
        exit 1
esac

exit $?
