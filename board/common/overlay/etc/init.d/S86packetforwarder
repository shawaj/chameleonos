#!/bin/bash

PROG_TEMPLATE="/opt/packet_forwarder/bin/lora_pkt_fwd_%s"
PROG_M="/opt/miner/bin/miner"
PROG_CI="/opt/packet_forwarder/bin/chip_id"

JSON_CONF_TEMPLATE="/opt/packet_forwarder/etc/global_conf.json.%s.%s"
JSON_CONF="/var/run/global_conf.json"
USER_JSON_CONF="/data/etc/global_conf.json"

SYS_CONF="/etc/packet_forwarder.conf"
BOOT_CONF="/boot/packet_forwarder.conf"
CONF="/data/etc/packet_forwarder.conf"

LOG="/var/log/packet_forwarder.log"
LIB_DIR="/opt/packet_forwarder/lib"

REG_TIMEOUT=600
REG_CONF="/var/lib/reg.conf"
DEF_REG="US915"

# TX power:      12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
SX1301_PA_GAIN=(  9 15 10 10 11 12 13 14  9 10 10 10 10 11 12 14)
SX1301_MIX_GAIN=( 2  1  2  2  2  2  2  2  3  3  3  3  3  3  3  3)
SX1301_DIG_GAIN=( 0  0  0  0  0  0  0  0  0  1  1  0  0  0  0  0)
SX1302_PWR_IDX=(  4  5  6  7  8  9 10 11 12 13 14 15 16 17 19 20)

declare -A SX1301_RSSI_OFFSET=( \
    [AS923]=-166.0 \
    [AU915]=-166.0 \
    [CN470]=-176.0 \
    [EU868]=-166.0 \
    [IN865]=-166.0 \
    [KR920]=-166.0 \
    [RU864]=-166.0 \
    [US915]=-166.0 \
)

declare -A SX1302_RSSI_OFFSET=( \
    [AS923]=-215.4 \
    [AU915]=-215.4 \
    [CN470]=-207.0 \
    [EU868]=-215.4 \
    [IN865]=-215.4 \
    [KR920]=-215.4 \
    [RU864]=-215.4 \
    [US915]=-215.4 \
)


test -n "${OS_VERSION}" || source /etc/init.d/base

prepare_conf ${CONF} ${SYS_CONF} ${BOOT_CONF}


find_reg() {
    region=$(${PROG_M} info region 2>/dev/null)
    test $? == 0 || region=""

    # Can't detect region when provisioning, so we use a default instead of bailing out
    test -f /var/log/provision.log && test -z "${region}" && region=${DEF_REG}

    echo ${region}
}

find_sx() {
    cd $(dirname ${PROG_CI})
    if ${PROG_CI} | grep -q "concentrator EUI:"; then
        echo "sx1302"
    else
        echo "sx1301"
    fi
}

prepare_conf_json() {
    # $1 - template
    # $2 - sx
    # $3 - reg
    source ${CONF}
    export PF_ANTENNA_GAIN
    if [[ $2 == sx1301 ]]; then
        # TX power ranges from 12 to 27 dBm
        export PF_PA_GAIN=${SX1301_PA_GAIN[${PF_TX_POWER} - 12]}
        export PF_MIX_GAIN=${SX1301_MIX_GAIN[${PF_TX_POWER} - 12]}
        export PF_DIG_GAIN=${SX1301_DIG_GAIN[${PF_TX_POWER} - 12]}
        export PF_RSSI_OFFSET=$(echo "${PF_RSSI_OFFSET} + ${SX1301_RSSI_OFFSET[$3]}" | bc)
    else  # Assuming $2 == sx1302
        export PF_PWR_IDX=${SX1302_PWR_IDX[${PF_TX_POWER} - 12]}
        export PF_RSSI_OFFSET=$(echo "${PF_RSSI_OFFSET} + ${SX1302_RSSI_OFFSET[$3]}" | bc)
    fi
    cat $1 | envsubst > ${JSON_CONF}
}

start() {
    msg_begin "Starting packet-forwarder"
    
    if ! [[ -e /dev/spidev0.0 ]]; then
        msg_fail "no SPI device"
        return
    fi
    
    count=0
    while true; do
        reg=$(find_reg)
        if [[ -z "${reg}" ]]; then
            count=$((count + 1))
            if [[ ${count} -gt ${REG_TIMEOUT} ]]; then
                msg_fail "no regulatory information"
                panic_action packetforwarder "no regulatory information"
                return 1
            fi
            sleep 1
        else
            break
        fi
    done
    
    # Remember the region for future use
    reg_prefix="$(echo ${reg} | cut -b1-2 | tr A-Z a-z)."
    if [[ "${reg_prefix}" == "us." ]]; then
        reg_prefix=""  # US works without prefix since it's the default
    fi
    echo "REGION=${reg}" > ${REG_CONF}
    echo "REGION_PREFIX=${reg_prefix}" >> ${REG_CONF}

    sx=$(find_sx)
    prog=$(printf ${PROG_TEMPLATE} ${sx})

    # Prepare JSON conf
    if [[ -f ${USER_JSON_CONF} ]]; then
        # User config has precedence
        cp ${USER_JSON_CONF} ${JSON_CONF}
    else
        json_conf_template=$(printf ${JSON_CONF_TEMPLATE} ${sx} ${reg})
        prepare_conf_json ${json_conf_template} ${sx} ${reg} > ${JSON_CONF}
    fi

    # Must be run from the bin directory
    cd $(dirname ${prog})
    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LIB_DIR}
    
    # stdbuf here forces line buffering, allowing real-time log
    stdbuf -oL -eL ${prog} &> ${LOG} &

    msg_done ${sx}/${reg}
}

stop() {
    msg_begin "Stopping packet-forwarder"
    
    sx=$(find_sx)
    prog=$(printf ${PROG_TEMPLATE} ${sx})
    base_prog=$(basename ${prog})
    if killall -q ${base_prog}; then
        # Allow 2 seconds for a gracefulish shutdown
        sleep 2
        msg_done
    else
        msg_fail
    fi
    
    # Kill any remainings with SIGKILL
    ps | grep -E '/opt/packet_forwarder' | grep -v $$ | grep -v grep | tr -s ' ' | sed -e 's/^\s//' | cut -d ' ' -f 1 | xargs -r kill -9
}

case "$1" in
    start)
        start
        ;;

    stop)
        stop
        ;;

    restart)
        stop
        start
        ;;

    *)
        echo "Usage: $0 {start|stop|restart}"
        exit 1
esac

exit $?
