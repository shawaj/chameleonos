#!/bin/bash

SSH_SERVER=revtun.sbinternal.net
SSH_PORT=2304
SSH_USER=root

RPI_SN=$(/etc/init.d/boardsn)
RPI_SN_PART=${RPI_SN: -4}
TUNNEL_PORT=$(printf "%d" 0x${RPI_SN_PART})
LOG_FILE=/var/log/ssh_reverse_tunnel.log
PID_FILE=/var/run/ssh_reverse_tunnel.pid


function ssh_reverse_tunnel() {
    while true; do
        ssh -N -R${TUNNEL_PORT}:127.0.0.1:2304 -o ExitOnForwardFailure=yes -o ServerAliveInterval=30 -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_SERVER} -p${SSH_PORT}
        sleep 30
    done
}

start() {
    chmod go-rwx /data/etc/ssh/id_rsa*
    ssh_reverse_tunnel &>${LOG_FILE} &
    echo $! > ${PID_FILE}
}

stop() {
    if [[ -s ${PID_FILE} ]]; then
        kill $(cat ${PID_FILE}) 2>/dev/null
    fi
    ps | grep sshtunnel | grep -v $$ | grep -v grep | tr -s ' ' | sed -e 's/^\s//' | cut -d ' ' -f 1 | xargs -r kill
    ps | grep ssh | grep ${SSH_SERVER} | tr -s ' ' | sed -e 's/^\s//' | cut -d ' ' -f 1 | xargs -r kill
}

status() {
    test -s ${PID_FILE} || return 1
    kill -0 $(cat ${PID_FILE}) 2>/dev/null
}

case "$1" in
    start)
        start
        ;;
        
    stop)
        stop
        ;;
    
    restart)
        stop
        start
        ;;
    
    status)
        status
        ;;

    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
esac
