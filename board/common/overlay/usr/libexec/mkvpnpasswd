#!/usr/bin/env python

import base64
import binascii
import hashlib
import os
import sys
import time

import chamutils


def make_password(user_swarm_key=None):
    now = int(time.time())
    cpu_serial_number = chamutils.get_unit_serial_number()
    if user_swarm_key:
        user_swarm_key_hex = binascii.hexlify(user_swarm_key).decode()
        to_hash = f'{now}.{cpu_serial_number}.{user_swarm_key_hex}'
        signature = hashlib.sha256(to_hash.encode()).digest()

    else:
        ecc_serial_number = chamutils.get_ecc_serial_number()
        to_hash = f'{now}.{cpu_serial_number}.{ecc_serial_number}'
        to_sign = hashlib.sha256(to_hash.encode()).digest()
        signature = chamutils.ecc_sign(to_sign)

    signature_b32 = base64.b32encode(signature).decode()
    password = f'{now}.{signature_b32}'
    
    return password


if __name__ == '__main__':
    user_swarm_key_file = None
    if len(sys.argv) > 1:
        user_swarm_key_file = sys.argv[1]
    if user_swarm_key_file and os.path.exists(user_swarm_key_file):
        password = make_password(open(user_swarm_key_file, 'rb').read())

    else:
        password = make_password()

    print(password)
