#!/usr/bin/env python

import binascii
import os
import subprocess
import sys
import re

import chamutils


PUB_KEYS_FILE = '/var/run/public_keys'
MINER_CMD = '/opt/miner/bin/miner'


def get_pub_key_hex():
    with open(PUB_KEYS_FILE, 'rt') as f:
        data = f.read()

    address = re.search(r'[a-zA-Z0-9]{50,}', data).group()
    erlang_cmd = '{ecc_compact, {{\'ECPoint\', Key}, _}} = libp2p_crypto:b58_to_pubkey("%(address)s"), F = io_lib:format(\"~p\", [Key]), lists:flatten(F).'
    erlang_cmd = erlang_cmd % {'address': address}

    cmd = [MINER_CMD, 'eval', erlang_cmd]
    output = subprocess.check_output(cmd)
    output = b'[' + re.sub(rb'[^0-9,]', b'', output) + b']'
    values = eval(output)

    return binascii.hexlify(bytes(values))[2:].decode()


if __name__ == '__main__':
    ecc_sn = 'unknown'

    user_swarm_key_file = None
    if len(sys.argv) > 1:
        user_swarm_key_file = sys.argv[1]
    if not user_swarm_key_file or not os.path.exists(user_swarm_key_file):
        ecc_sn = chamutils.get_ecc_serial_number()

    pub_key_hex = get_pub_key_hex()
    print(f'{ecc_sn} {pub_key_hex}')
